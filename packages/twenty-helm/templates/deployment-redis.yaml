{{- if not .Values.useExternalRedis }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: twentycrm-redis
  name: twentycrm-redis
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: twentycrm-redis
  template:
    metadata:
      labels:
        app: twentycrm-redis
    spec:
      {{- with .Values.scheduling.redis.nodeSelector }}
      {{- if . }}
      nodeSelector:
      {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.scheduling.redis.tolerations }}
      {{- if . }}
      tolerations:
      {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.scheduling.redis.affinity }}
      {{- if . }}
      affinity:
      {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: redis
          image: redis/redis-stack-server:{{ .Values.image.tag }}
          imagePullPolicy: Always
          args: ["--maxmemory-policy", "noeviction"]
          env:
            - name: PORT
              value: "6379"
          ports:
            - containerPort: 6379
              name: redis
              protocol: TCP
          resources:
            requests:
              memory: {{ .Values.resources.redis.requests.memory }}
              cpu: {{ .Values.resources.redis.requests.cpu }}
            limits:
              memory: {{ .Values.resources.redis.limits.memory }}
              cpu: {{ .Values.resources.redis.limits.cpu }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
{{- end }}